{"version":3,"sources":["../../../../react-client/src/redux/actions.js"],"names":["authSuccess","type","AUTH_SUCCESS","data","user","errMsg","ERR_MSG","msg","updateUser","UPDATE_USER","resetUser","RESET_USER","register","username","password","rePassword","then","result","res","code","dispatch","catch","updateUserInfo","header","post","company","salary","info"],"mappings":"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","file":"actions.js","sourcesContent":["/**\r\n * Created by 10560 on 2018/10/31.\r\n */\r\n//action creaters,用来创建action的工厂函数模块\r\nimport {AUTH_SUCCESS,ERR_MSG,UPDATE_USER,RESET_USER} from './action-types';\r\nimport {reqUpdateUserInfo,reqLogin,reqRegister} from '../api/index';\r\nexport const authSuccess=user=> ({type:AUTH_SUCCESS,data:user});\r\nexport const errMsg=msg=>({type:ERR_MSG,data:msg});\r\nexport const updateUser=user=> ({type:UPDATE_USER,data:user});\r\nexport const resetUser=msg=>({type:RESET_USER,data:msg});\r\n//定义异步函数\r\nexport const register=data=>{\r\n    const {username,password,rePassword,type}=data;\r\n    if(!username){\r\n        return errMsg({username,password,msg:'请输入用户名'})\r\n    }else if(!password){\r\n        return errMsg({username,password,msg:'请输入密码'})\r\n    }else if(!type){\r\n        return errMsg({username,password,msg:'请选择类型'})\r\n    }else if(password!==rePassword){\r\n        return errMsg({username,password,msg:'两次密码输入不一致'})\r\n    }\r\n    return dispatch=>{\r\n    reqRegister(data)\r\n        .then(res=>{\r\n            const result=res.data;\r\n            if(result.code===0){\r\n                dispatch(authSuccess(result.data));\r\n            }else{\r\n                dispatch(errMsg({msg:result.msg,username:data.username,type:data.type}));\r\n            }\r\n        })\r\n        .catch(rej=>{\r\n            dispatch(errMsg({msg:'网络出错误了，请刷新重试',username:data.username,type:data.type}));\r\n        })\r\n    }\r\n}\r\n//异步 更新用户数据\r\nexport const updateUserInfo=data=>{\r\n  const {header,post,company,salary,info}=data;\r\n  if(!header){\r\n    return resetUser({msg:'请选择头像'})\r\n  }else if(!post){\r\n    return resetUser({msg:'请输入招聘職位'})\r\n  }else if(!company){\r\n    return resetUser({msg:'请輸入公司名稱'})\r\n  }else if(!salary){\r\n    return resetUser({msg:'請輸入薪資範圍'})\r\n  }else if(!info){\r\n    return resetUser({msg:'請輸入公司簡介'})\r\n  }\r\n  return dispatch=>{\r\n    reqUpdateUserInfo(data)\r\n      .then(res=>{\r\n        const result=res.data;\r\n        if(result.code===0){\r\n          dispatch(updateUser(result.data));\r\n        }else{\r\n          dispatch(resetUser({msg:result.msg}));\r\n        }\r\n      })\r\n      .catch(rej=>{\r\n        dispatch(resetUser({msg:'网络出错误了，请刷新重试'}));\r\n      })\r\n  }\r\n}\r\n"]}